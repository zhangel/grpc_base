// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: grpc_base/api/hello.proto

package api

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	hello "grpc_base/api/hello"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_grpc_base_api_hello_proto protoreflect.FileDescriptor

var file_grpc_base_api_hello_proto_rawDesc = []byte{
	0x0a, 0x19, 0x67, 0x72, 0x70, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x61, 0x70, 0x69,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x21,
	0x67, 0x72, 0x70, 0x63, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x68, 0x65,
	0x6c, 0x6c, 0x6f, 0x2f, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x32, 0xb4, 0x01, 0x0a, 0x0c, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x12, 0x42, 0x0a, 0x07, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x07, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1a, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x47, 0x65,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x5f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x61, 0x70, 0x69, 0x2e, 0x68, 0x65, 0x6c, 0x6c, 0x6f, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x5f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x68, 0x75, 0x6d, 0x6d, 0x65, 0x72, 0x2f, 0x62, 0x69, 0x7a, 0x2f,
	0x62, 0x69, 0x7a, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x42, 0x0f, 0x5a, 0x0d, 0x67, 0x72, 0x70, 0x63,
	0x5f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var file_grpc_base_api_hello_proto_goTypes = []interface{}{
	(*hello.SetInfo_Request)(nil),  // 0: api.hello.SetInfo_Request
	(*hello.GetInfo_Request)(nil),  // 1: api.hello.GetInfo_Request
	(*hello.SetInfo_Response)(nil), // 2: api.hello.SetInfo_Response
	(*hello.GetInfo_Response)(nil), // 3: api.hello.GetInfo_Response
}
var file_grpc_base_api_hello_proto_depIdxs = []int32{
	0, // 0: api.HelloService.SetInfo:input_type -> api.hello.SetInfo_Request
	1, // 1: api.HelloService.GetInfo:input_type -> api.hello.GetInfo_Request
	2, // 2: api.HelloService.SetInfo:output_type -> api.hello.SetInfo_Response
	3, // 3: api.HelloService.GetInfo:output_type -> api.hello.GetInfo_Response
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_grpc_base_api_hello_proto_init() }
func file_grpc_base_api_hello_proto_init() {
	if File_grpc_base_api_hello_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_grpc_base_api_hello_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_grpc_base_api_hello_proto_goTypes,
		DependencyIndexes: file_grpc_base_api_hello_proto_depIdxs,
	}.Build()
	File_grpc_base_api_hello_proto = out.File
	file_grpc_base_api_hello_proto_rawDesc = nil
	file_grpc_base_api_hello_proto_goTypes = nil
	file_grpc_base_api_hello_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HelloServiceClient is the client API for HelloService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HelloServiceClient interface {
	SetInfo(ctx context.Context, in *hello.SetInfo_Request, opts ...grpc.CallOption) (*hello.SetInfo_Response, error)
	GetInfo(ctx context.Context, in *hello.GetInfo_Request, opts ...grpc.CallOption) (*hello.GetInfo_Response, error)
}

type helloServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewHelloServiceClient(cc grpc.ClientConnInterface) HelloServiceClient {
	return &helloServiceClient{cc}
}

func (c *helloServiceClient) SetInfo(ctx context.Context, in *hello.SetInfo_Request, opts ...grpc.CallOption) (*hello.SetInfo_Response, error) {
	out := new(hello.SetInfo_Response)
	err := c.cc.Invoke(ctx, "/api.HelloService/SetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *helloServiceClient) GetInfo(ctx context.Context, in *hello.GetInfo_Request, opts ...grpc.CallOption) (*hello.GetInfo_Response, error) {
	out := new(hello.GetInfo_Response)
	err := c.cc.Invoke(ctx, "/api.HelloService/GetInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HelloServiceServer is the server API for HelloService service.
type HelloServiceServer interface {
	SetInfo(context.Context, *hello.SetInfo_Request) (*hello.SetInfo_Response, error)
	GetInfo(context.Context, *hello.GetInfo_Request) (*hello.GetInfo_Response, error)
}

// UnimplementedHelloServiceServer can be embedded to have forward compatible implementations.
type UnimplementedHelloServiceServer struct {
}

func (*UnimplementedHelloServiceServer) SetInfo(context.Context, *hello.SetInfo_Request) (*hello.SetInfo_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SetInfo not implemented")
}
func (*UnimplementedHelloServiceServer) GetInfo(context.Context, *hello.GetInfo_Request) (*hello.GetInfo_Response, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetInfo not implemented")
}

func RegisterHelloServiceServer(s *grpc.Server, srv HelloServiceServer) {
	s.RegisterService(&_HelloService_serviceDesc, srv)
}

func _HelloService_SetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hello.SetInfo_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).SetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HelloService/SetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).SetInfo(ctx, req.(*hello.SetInfo_Request))
	}
	return interceptor(ctx, in, info, handler)
}

func _HelloService_GetInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(hello.GetInfo_Request)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HelloServiceServer).GetInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.HelloService/GetInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HelloServiceServer).GetInfo(ctx, req.(*hello.GetInfo_Request))
	}
	return interceptor(ctx, in, info, handler)
}

var _HelloService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.HelloService",
	HandlerType: (*HelloServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SetInfo",
			Handler:    _HelloService_SetInfo_Handler,
		},
		{
			MethodName: "GetInfo",
			Handler:    _HelloService_GetInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "grpc_base/api/hello.proto",
}
